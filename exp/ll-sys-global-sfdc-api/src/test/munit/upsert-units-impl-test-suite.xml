<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="upsert-units-impl-test-suite.xml" />
	<munit:test name="sys-global-sfdc-units:\upsert-units:sys-global-sfdc-configTest" doc:id="80e34e9e-13da-4eed-9392-612f6c0ce7a7" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="upsert unit" doc:id="be21526d-a517-451a-bf1a-7c4d56c31e60" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="41a1f026-3958-4e62-850d-9ed351e54575" attributeName="doc:id" />
				</munit-tools:with-attributes>				
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/upsert-units-response.json', 'application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Product related Collateral" doc:id="3bbfd8b2-0016-4d44-94fc-d815a9d388a0" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Product related Marketing Collateral" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="marketColleteralId" attributeName="target" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/upsert-units-response.json', 'application/json')]" />
					<munit-tools:attributes value='#[{uriParams:{"prodId" : "01tN0000007t56G"}}]' />
				</munit-tools:then-return>				
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="46d4ad67-0592-4d21-aa79-46d88c516ef2" >
				<munit:variables >
					<munit:variable key="marketColleteralId" value='"a1FN00000021MM7"' />
				</munit:variables>
			</munit:set-event>
			<munit-tools:mock-when doc:name="update marketing collateral" doc:id="c5f3e4e0-cde1-4542-80cd-d150ffb95ed3" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Marketing Collateral" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="updateMarketingCollateralResponse" attributeName="target" />
				</munit-tools:with-attributes>				
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/upsert-units-marketing-collateral-response.json', 'application/json')]" />
					<munit-tools:variables >
						<munit-tools:variable key="updateMarketingCollateralResponse" value="#[readUrl('classpath://examples/units/upsert-units-response.json', 'application/json')]" />
					</munit-tools:variables>
				</munit-tools:then-return>						
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-payload value="#[readUrl('classpath://examples/units/upsert-units-request.json', 'application/json')]" doc:name="Set Payload" doc:id="adb790e2-e36a-4b6b-9669-24f00a29f9e3" />
			<flow-ref doc:name="Flow-ref to upsert-units-in-sf" doc:id="0bca6a7d-657e-4bfa-b3e1-3ddd4d4e6c88" name="proc-yardi2sf-unit-sync"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="cb181c0f-25a2-4b45-a479-6c780cc2694d" actual="#[payload.status]" expected='success'/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-global-sfdc-project:\json:units-Availability-sync-configTest" doc:id="c8f7e509-3895-4b5b-9b3b-c9b21eeb37e3" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="3534c954-770a-4bbb-9dfa-12e183a5be79" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Product Update" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/update-unit-availability-response.json', 'application/json')]" />
				</munit-tools:then-return>				
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-payload value="#[readUrl('classpath://examples/units/update-unit-availability-request.json', 'application/json')]" doc:name="Set Payload" doc:id="b02ae5f1-9ce3-45c4-b17a-c5f0bf1da6a5" />
			<flow-ref doc:name="Flow-ref to proc-yardi2sf-unitsAvailability-sync" doc:id="32e1aec9-c111-4341-8c02-07c2dc1f909c" name="proc-yardi2sf-unitsAvailability-sync"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="abae5044-cb87-440f-8024-5feec46c6dff" actual="#[payload.status as String]" expected='#["true"]'/>
		</munit:validation>
	
</munit:test> 
	 <munit:test name="sys-global-sfdc-project-get:\projects:\json:sys-global-sfdc-configTest" doc:id="d0b33aa9-1c5a-4edc-bcbf-a7004db7afd1" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="72b7e23b-7f4c-4bd5-b907-f903bb9e75ad" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Projects" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="e39c598a-9010-4225-992b-47ff2f54ffea" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/get-projects-response.json', 'application/json')]" />
				</munit-tools:then-return>				
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get:\projects:sys-global-sfdc-config" doc:id="152da82b-2181-4f45-80e2-f180dc382585" name="get:\projects:sys-global-sfdc-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="7b13ae5f-edc6-46d6-9b2b-5f91d9e7973f" actual="#[payload[0].SYS_ProjectCode__c]" expected='#["p012345"]'/>
		</munit:validation>
	</munit:test> 
	<munit:test name="sys-global-sfdc-project-get:\projects\(projectId):units\json:sys-global-sfdc-configTest" doc:id="39b2c335-c74b-4c4c-8414-5b4899d91e28" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="4d82e5cf-9fd1-4371-8969-4f07b0e4be5c" >
				<munit:attributes value='#[{uriParams:{"projectId" : "a0dN000000Cns7oIAB"}}]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="a45a50e2-077e-4c79-8c1c-ba996c0bda4b" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Project with projectId" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/get-units-project-response.json', 'application/json')]" />
				</munit-tools:then-return>						
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="03c06275-0f7d-4a86-91a6-c1c9174d4bb2" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Products" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://examples/units/get-units-projectid-response.json', 'application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get:\projects\(projectId)\units:sys-global-sfdc-config" doc:id="20b34cdb-cc49-4e59-b453-cb74e9e29ac2" name="get:\projects\(projectId)\units:sys-global-sfdc-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="b6e56ca5-aa6d-4785-a6ba-32aee82d84c3" actual="#[payload]" expected="#[readUrl('classpath://examples/units/get-units-by-project-id-response.json', 'application/json')]"/>
		</munit:validation>
	</munit:test> 

</mule>
