<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="apartmentAvailability-impl-suite.xml" />
	<munit:test name="get-apartmentAvailability-request-test" doc:id="b01cb008-b95c-4aa1-b5a4-5b9f4f5332a5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Apartment Availability Request" doc:id="9580e03d-6de1-463a-a485-b68404ba6ea5" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c6cd2518-66a3-4c41-ace5-ccdbc5d86d0e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://getapartmentAvailabilityrequesttest\mock_payload.dwl')]" mediaType="application/json" />
					<munit-tools:variables >
						<munit-tools:variable key="requestParam" value="#[readUrl('classpath://getapartmentAvailabilityrequesttest\mock_variable_3.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="0f076458-c168-45d2-96b6-cfb1248c4232">
				<munit:variables >
					<munit:variable key="propertyCode" value="p0000164" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-apartmentAvailability-request-sub-flow" doc:id="b4c31d23-78fe-455d-968a-bf0bdb657114" name="get-apartmentAvailability-request-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="5e615d95-8283-49ab-b040-e1b1afaf46d2" expected="#[readUrl('classpath://getapartmentAvailabilityrequesttest\assert_expression_payload.dwl')]" actual="#[payload]"/>
			<!-- <munit-tools:assert doc:name="Assert payload" doc:id="7f3563a1-529a-49fa-8bda-20b3eeca83a2" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getapartmentAvailabilityrequesttest::assert_expression_payload
-&#45;&#45;
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert> -->
		</munit:validation>
	</munit:test>


</mule>
